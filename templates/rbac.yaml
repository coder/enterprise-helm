{{- if not .Values.coderd.satellite.enable }}
---
# The service account used by environments. It has no permissions and is only 
# used to bind a pod security policy (if one is provided).
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: {{ .Release.Namespace | quote }} 
  name: environments
---
# The service account for the built in workspace provider on application installation.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coder
  namespace: {{ .Release.Namespace | quote }}
  annotations:
  {{- range $key, $value := fromYaml (include "movedValue" (dict "Values" .Values "Key" "coderd.builtinProviderServiceAccount.annotations")) }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
  labels:
  {{- range $key, $value := fromYaml (include "movedValue" (dict "Values" .Values "Key" "coderd.builtinProviderServiceAccount.labels")) }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: coder
  namespace: {{ .Release.Namespace | quote }}
rules:
  - apiGroups: ["", "apps", "networking.k8s.io"] # "" indicates the core API group
    resources: ["persistentvolumeclaims", "pods", "deployments", "services", "secrets", "pods/exec","pods/log", "events", "networkpolicies", "serviceaccounts"]
    verbs: ["create", "get", "list", "watch", "update", "patch", "delete", "deletecollection"]
  - apiGroups: ["metrics.k8s.io", "storage.k8s.io"]
    resources: ["pods", "storageclasses"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: coder
  namespace: {{ .Release.Namespace | quote }}
subjects:
  - kind: ServiceAccount
    name: coder
roleRef:
  kind: Role
  name: coder
  apiGroup: rbac.authorization.k8s.io
{{- end }}