name: build

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  workflow_dispatch:

permissions:
  actions: none
  checks: none
  contents: read
  deployments: none
  issues: none
  packages: none
  pull-requests: none
  repository-projects: none
  security-events: none
  statuses: none

# Cancel in-progress runs for pull requests when developers push
# additional changes, and serialize builds in branches.
# https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-concurrency-to-cancel-any-in-progress-job-or-run
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  # Fast checks (e.g. static code analysis)
  quick:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install dependencies
        run: ./scripts/install_deps.sh

      - name: Lint Helm chart
        run: make lint/helm

      - name: Check formatting and docs
        run: ./scripts/fmt.sh

      - name: Lint shell scripts
        run: make lint/shellcheck

      - name: Lint Kubernetes templates
        run: make lint/kubernetes

      - name: Install Go
        uses: actions/setup-go@v3.1.0
        with:
          go-version: '^1.17'

      - name: Unit tests
        run: ./scripts/test_go.sh

      - name: Package Helm chart
        run: ./scripts/package.sh

  # Integration test: deploy into a local kind cluster
  integration-kind:
    runs-on: ubuntu-20.04
    name: "integration/kind/${{ matrix.tag }}"
    strategy:
      fail-fast: false
      matrix:
        # Image tags for kindest/node to run
        tag:
          - v1.21.2
          - v1.22.4
          - v1.23.3
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install dependencies
        run: ./scripts/install_deps.sh

      - name: Start kind cluster
        uses: container-tools/kind-action@v1
        with:
          node_image: "docker.io/kindest/node:${{ matrix.tag }}"

      - name: Show environment data
        run: |
          set -x
          docker ps -a
          printenv
          kubectl cluster-info
          kubectl config view

      - name: Install Coder
        run: |
          helm install coder-test . \
            --create-namespace \
            --namespace=coder-test \
            --wait \
            --debug \
            --values=examples/kind/kind.values.yaml

      - name: Get running info
        if: always()
        run: |
          set -x
          kubectl --namespace=coder-test describe all
          kubectl --namespace=coder-test logs statefulset/timescale
          kubectl --namespace=coder-test logs deployment/coderd
